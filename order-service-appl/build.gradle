apply plugin: "java"
apply plugin: "checkstyle"

apply plugin: "org.springframework.boot"
apply plugin: "io.spring.dependency-management"

apply plugin: "com.bmuschko.docker-remote-api"
apply plugin: "com.bmuschko.docker-spring-boot-application"

apply plugin: "org.openapi.generator"

apply plugin: "idea"

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
    jcenter()
}

sourceSets {
    main {
        java {
            srcDirs = [
                    'build/openapi/order-service-open-api/src/main/java',
                    'src/main/java'
            ]
        }
    }
}

configurations {
    all {
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
    }
}

dependencies {

    compile project(':order-service-open-api')
    compile project(':order-service-protobuf-api')

    compile group: 'org.springframework.boot', name: 'spring-boot-starter-web'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-data-redis'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-log4j2'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-actuator'

    compile group: 'org.springframework.kafka', name: 'spring-kafka', version: '2.2.0.RELEASE'

    compile group: 'org.projectlombok', name: 'lombok', version: '1.18.4'

    compile group: 'io.swagger', name: 'swagger-annotations', version: '1.5.21'

    compile group: 'com.h2database', name: 'h2'

    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile group: 'org.springframework.boot', name: 'spring-boot-starter-test'
    testCompile group: 'org.springframework.kafka', name: 'spring-kafka-test', version: '2.2.0.RELEASE'
    testCompile group: 'it.ozimov', name: 'embedded-redis', version: '0.7.2'

}

docker {
    registryCredentials {
        username = project.property('docker.registry.username')
        password = project.property('docker.registry.password')
    }

    springBootApplication {
        tag = "localhost:8083/order-service:$project.version".toString()
    }
}

task openApiGenerateApi(type: org.openapitools.generator.gradle.plugin.tasks.GenerateTask) {
    group = "openapi"
    generatorName = "spring"
    inputSpec = "$rootDir/order-service-open-api/build/processed/$project.version/openapi.yaml".toString()
    outputDir = "$buildDir/openapi/order-service-open-api/".toString()
    library = "spring-mvc"
    apiPackage = "com.rogerpeyer.orderservice.api"
    modelPackage = "com.rogerpeyer.orderservice.api.model"
    configOptions = [
            dateLibrary  : "java8",
            java8        : "true",
            interfaceOnly: "true"
    ]
}

bootJar {
    classifier = 'boot'
}

checkstyle {
    toolVersion '8.14'
    ignoreFailures false
    checkstyleMain.exclude 'com/rogerpeyer/orderservice/api/**'
    checkstyleMain.exclude 'com/rogerpeyer/asset/**'
}

compileJava.dependsOn tasks.openApiGenerateApi
openApiGenerateApi.dependsOn ':order-service-open-api:openApiGenerateFinalSpec'