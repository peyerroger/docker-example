apply plugin: "java"
apply plugin: "checkstyle"
apply plugin: "maven-publish"

apply plugin: "org.springframework.boot"
apply plugin: "io.spring.dependency-management"

apply plugin: "com.bmuschko.docker-remote-api"
apply plugin: "com.bmuschko.docker-spring-boot-application"

sourceCompatibility = 1.8

configurations {
    all {
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
    }
}

dependencies {

    compile project(':order-management-api')
    compile project(':order-event-api')
    compile project(':product-event-spi')

    compile group: 'org.springframework.boot', name: 'spring-boot-starter-web'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-data-redis'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-log4j2'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-actuator'

    compile group: 'org.springframework.kafka', name: 'spring-kafka', version: '2.2.0.RELEASE'

    compile group: 'org.projectlombok', name: 'lombok', version: '1.18.4'

    compile group: 'com.h2database', name: 'h2'

    compile group: 'javax.annotation', name: 'javax.annotation-api', version: '1.3.2'

    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile group: 'org.springframework.boot', name: 'spring-boot-starter-test'
    testCompile group: 'org.springframework.kafka', name: 'spring-kafka-test', version: '2.2.0.RELEASE'
    testCompile group: 'it.ozimov', name: 'embedded-redis', version: '0.7.2'

}

docker {
    registryCredentials {
        username = project.property('docker.registry.username')
        password = project.property('docker.registry.password')
    }

    springBootApplication {
        tag = "localhost:8083/order-service:$project.version".toString()
    }
}

bootJar {
    classifier = 'boot'
}

checkstyle {
    toolVersion '8.14'
    ignoreFailures false
    checkstyleMain.exclude 'com/rogerpeyer/orderservice/api/**'
    checkstyleMain.exclude 'com/rogerpeyer/asset/**'
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}


artifacts {
    archives javadocJar
}