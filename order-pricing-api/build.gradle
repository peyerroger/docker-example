apply plugin: "java"
apply plugin: "maven-publish"
apply plugin: "org.openapi.generator"
apply plugin: 'com.moowork.node'
apply plugin: "io.spring.dependency-management"

dependencyManagement {
    imports {
        mavenBom SpringBootPlugin.BOM_COORDINATES
    }
}

import org.openapitools.generator.gradle.plugin.tasks.*
import org.springframework.boot.gradle.plugin.SpringBootPlugin

sourceSets {
    springMvcServer {
        java {
            srcDirs = [
                    "$buildDir/openapi-spring-mvc/src/main/java".toString()
            ]
        }
    }
    springRestTemplate {
        java {
            srcDirs = [
                    "$buildDir/openapi-spring-resttemplate/src/main/java".toString()
            ]
        }
    }
}


configurations {
    springMvcServer
    springMvcServerCompile.extendsFrom compile
    springMvcServerRuntime.extendsFrom runtime
    springRestTemplate
    springRestTemplateCompile.extendsFrom compile
    springRestTemplateRuntime.extendsFrom runtime
    openApi
}

sourceSets {
    springRestTemplate {
        java {
            srcDirs = [
                    "$buildDir/openapi-spring-resttemplate/src/main/java"
            ]
        }
    }
    springMvcServer {
        java {
            srcDirs = [
                    "$buildDir/openapi-spring-mvc/src/main/java"
            ]
        }
    }
}

dependencies {
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-web'
    compile group: 'io.swagger', name: 'swagger-annotations', version: '1.5.21'
}

task openApiGenerateFinalSpec(type: Copy) {
    group = "build"
    from('src/main/api') {
        eachFile { filter { it.replaceAll('@VERSION@', project.version.toString()) } }
    }
    into "$buildDir/processed/$project.version"
}


task springMvcServerJar(type: Jar) {
    group = "build"
    archiveName = "${project.name}.jar"
    from(sourceSets.springMvcServer.output) {
        include '**/*.class'
    }
}

task springRestTemplateJar(type: Jar) {
    group = "build"
    archiveName = "${project.name}.jar"
    from(sourceSets.springRestTemplate.output) {
        include '**/*.class'
    }
}

task openApiZip(type: Zip) {
    group = "build"
    archiveName "${project.name}.zip"
    destinationDir file("$buildDir/dist/")
    from "$buildDir/processed/$project.version/"
}

artifacts {
    openApi openApiZip
    springMvcServer springMvcServerJar
    springRestTemplate springRestTemplateJar
}

publishing {
    publications {
        openApiPublication(MavenPublication) {
            artifactId "${project.name}-openapi"
            artifact openApiZip
        }
        springRestTemplatePublication(MavenPublication) {
            artifactId "${project.name}-spring-resttemplate"
            artifact springRestTemplateJar
        }
        springMvcServerPublication(MavenPublication) {
            artifactId "${project.name}-spring-mvc"
            artifact springMvcServerJar
        }
    }
}

openApiValidate {
    inputSpec = "$buildDir/processed/${project.version}/openapi.yaml".toString()
}

task angular7ClientGenerate(type: GenerateTask, dependsOn: tasks.openApiGenerateFinalSpec) {
    group = "openapi"
    generatorName = "typescript-angular"
    inputSpec = "$buildDir/processed/${project.version}/openapi.yaml".toString()
    outputDir = "$buildDir/openapi-typescript-angular/".toString()
    configOptions = [
            ngVersion    : 7,
            npmName      : "@rogerpeyer/${project.name}-angular-7",
            npmVersion   : "${project.version}",
            npmRepository: "http://localhost:8081/repository/npm-hosted/",
            snapshot     : false
    ]
}

task springMvcServerGenerate(type: GenerateTask, dependsOn: tasks.openApiGenerateFinalSpec) {
    group = "openapi"
    generatorName = "spring"
    inputSpec = "$buildDir/processed/${project.version}/openapi.yaml".toString()
    outputDir = "$buildDir/openapi-spring-mvc/".toString()
    library = "spring-mvc"
    apiPackage = "com.rogerpeyer.orderpricing.api"
    modelPackage = "com.rogerpeyer.orderpricing.api.model"
    configOptions = [
            dateLibrary  : "java8",
            java8        : "true",
            interfaceOnly: "true"
    ]
}

task springRestTemplateGenerate(type: GenerateTask, dependsOn: tasks.openApiGenerateFinalSpec) {
    group = "openapi"
    generatorName = "java"
    inputSpec = "$buildDir/processed/${project.version}/openapi.yaml".toString()
    outputDir = "$buildDir/openapi-spring-resttemplate/".toString()
    library = "resttemplate"
    apiPackage = "com.rogerpeyer.orderpricing.client.api"
    modelPackage = "com.rogerpeyer.orderpricing.client.api.model"
    configOptions = [
            dateLibrary: "java8",
            java8      : "true"
    ]
}

node {
    distBaseUrl = "http://localhost:8081/repository/npm-group/"
}

task publishAngular7ClientToNpm(type: NpmTask, dependsOn: tasks.angular7ClientGenerate ) {
    group = "publishing"
    environment = ['AUTH_TOKEN': project.property('npm.token')]
    workingDir = file("$buildDir/openapi-typescript-angular/".toString())
    args = ['publish']
}

compileJava.dependsOn compileSpringMvcServerJava
compileJava.dependsOn compileSpringRestTemplateJava
compileSpringMvcServerJava.dependsOn tasks.springMvcServerGenerate
compileSpringRestTemplateJava.dependsOn tasks.springRestTemplateGenerate
tasks.openApiValidate.dependsOn tasks.openApiGenerateFinalSpec
check.dependsOn tasks.openApiValidate
publish.dependsOn tasks.publishAngular7ClientToNpm